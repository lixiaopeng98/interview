package com.interview.demo.redis.cluster;

/**
 * @describe: redis 集群
 * @author: lxp
 * @date: 2021/1/5 16:32
 */
public class RedisCluster {


    /**
     * 故障检测
     * 急群中的每个节点都会定期地向集群中的其他节点发送PING消息，以此来检测对方是否在线，如果接受ping消息
     * 的节点没有在规定的时间内，向发送ping消息的节点返回pong消息，那么发送ping消息的节点就会将接受ping
     * 的节点标记为疑似下线。
     * 然后会传播给 其他的主节点 用于判断是否下线
     *
     */
    /**
     * 故障转移
     * 1. 复制下线主节点的所有从节点里面，会有一个从节点被选中；
     * 2. 被选中的从节点会执行SLAVEOF no one 命令，成为新的主节点；
     * 3. 新的主节点会撤销所有对已下线主节点的槽指派，并将这些槽全部指派给自己；
     * 4. 新的主节点向集群广播一条pong消息，这条pong消息可以让集群中的其他节点立即知道这个节点已经由
     * 从节点变成了主节点，并且这个主节点已经接管了原本由已下线节点负责处理的槽；
     * 5. 新的主节点开始接收和自己负责处理的槽有关的命令请求，故障转移完成
     */
    /**
     * 选举新的主节点
     * 1. 集群里每个主节点都有一次投票的机会
     * 2. 当从节点发现自己正在复制的主节点进入已下线状态时,从节点会向集群广播一条
     * CLUSTERMSG_TYPE_FAILOVER_AUTH_REQYEST 消息，要求所有收到这条消息、并且具有投票权的主节点向这个
     * 从节点投票
     * 3. 如果主节点具有投票权，并且这个主节点尚未投票给其他从节点，那么主节点将向要求投票的从节点返回一条
     * CLUSTERMSG_TYPE_FAILOVER_AUTH_ASK消息，表示这个主节点支持从节点成为新的主节点
     * 4. 每个参与选举的从节点都会接收 CLUSTERMSG_TYPE_FAILOVER_AUTH_ASK消息，并根据自己收到了多少条这种
     * 消息来统计自己活得了多少主节点的支持
     * 5. 当从节点收集到大于等于N/2+1张支持票时，那么这个从节点会当选为新的主节点
     */
    /**
     * 计算槽位
     * 1. def slot_number(key);
     *         return CRC16(key) & 18383;
     *   CRC16
     */

}
