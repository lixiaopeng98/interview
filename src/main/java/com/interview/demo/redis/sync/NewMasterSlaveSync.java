package com.interview.demo.redis.sync;

/**
 * @describe: 新版 redis 主从同步 从2.8开始
 * @author: lxp
 * @date: 2020/12/31 16:04
 */
public class NewMasterSlaveSync {

    /**
     * 有两种模式
     * 1. 完整重同步 full resynchronization
     * 2. 部分重同步 partial resynchronization
     */
    /**
     * 完整重同步
     * 完整重同步的执行步骤和sync命令的执行步骤基本一样，它们都是通过让主服务器创建并发送RDB文件，
     * 以及向从服务器发送保存在缓冲区里面的写命令来进行同步
     * 部分重同步 SPYNC
     * 用于处理断线后重复制情况：当重新连接主服务器时，如果条件允许，主服务器可以将主从服务器连接断开期间执行的
     * 写命令发送给从服务器，从服务器只要接收并执行这些写命令，就可以将数据库更新至主服务器当前所处的状态.
     */
    /**
     * 部分重同步
     * 1. 引入复制偏移量的概念
     * 2. 复制积压缓冲区
     *      1. 这个引入的是 固定长度 先进先出队列，默认大小为1Mb
     *      2. 这个队列在达到1MB的时候 会抛弃掉最先存储的数据，把新数据存入队列里
     *
     * 3. 部分重同步步骤：
     *          1. 主从在1001偏移量的时候断开连接
     *          2. 主服务会把每次发送给从服务器的命令都 存入复制积压缓冲区
     *          3. 从服务器连上主服务器时，从服务器会通过psync命令将自己复制偏移量offset发送给主服务器，
     *             主服务器会根据这个复制偏移量来决定对从服务器执行何种同步操作：
     *          4. 如果主服务器检测 从服务器发送过来的offset偏移量 已经不存在自己的缓冲区了，那么执行
     *              完整重同步操作
     *          5. 相反，如果offset偏移量 以后的数据存在 缓冲区里，那么主服务器将对从服务器执行完整重同步操作
     *
     */
}
